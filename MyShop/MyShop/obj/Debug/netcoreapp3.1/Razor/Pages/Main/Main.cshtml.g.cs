#pragma checksum "C:\Users\Admin\Desktop\Project_C#\MyShop\MyShop\MyShop\Pages\Main\Main.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "da90214c3b46544e388b32fb8ee5643b6d69d991"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Pages_Main_Main), @"mvc.1.0.razor-page", @"/Pages/Main/Main.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"da90214c3b46544e388b32fb8ee5643b6d69d991", @"/Pages/Main/Main.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a9af4978b9c2bfca24ef48e96efe5f8573634464", @"/Pages/_ViewImports.cshtml")]
    #nullable restore
    public class Pages_Main_Main : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"
<div id=""app"">
    <div class=""columns"">
        <div class=""column is-size-5"">
            <div class=""dropdown is-hoverable"">
                <div class=""dropdown-trigger"">
                    <button class=""button"">
                        Category
                    </button>
                </div>
                <div class=""dropdown-menu"" id=""dropdown-menu4"" role=""menu"">
                    <div class=""dropdown-content"">
                        <a v-for=""category in categories.categories"" ");
            WriteLiteral(@"@click=""selectCategory(category)"" class=""dropdown-item is-size-5"" >
                            {{category}}
                        </a>
                    </div>
                </div>
             </div>
        </div>
        <div class=""column is-size-5"">
            <div class=""dropdown is-hoverable"">
                <div class=""dropdown-trigger"">
                    <button class=""button"">
                        Filtering
                    </button>
                </div>
                <div class=""dropdown-menu"">
                    <div class=""dropdown-content"">
                        <div class=""dropdown-item"">
                            <label class=""label has-text-centered"">Price From</label>
                            <div class=""has-text-centered is-relative"">
                                <input v-model.number=""priceFrom"" type=""range"" min=""5"" max=""205""/>
                            </div>
                            <div class=""has-text-centered"">{{priceFrom}}</di");
            WriteLiteral(@"v>
                        </div>
                        <div class=""dropdown-item"">
                            <label class=""label has-text-centered"">Price Before</label>
                            <div class=""has-text-centered"">
                                <input v-model.number=""priceBefore"" type=""range"" v-bind:min=""priceFrom + 10"" v-bind:max=""priceFrom + 100""/>
                            </div>
                            <div class=""has-text-centered"">{{priceBefore}}</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class=""column is-size-5"">
            <button v-if=""selectedCategory != null || priceFrom != 5 || priceBefore != 305"" ");
            WriteLiteral(@"@click=""reset()"" class=""button"">
                Reset
            </button>
        </div>
        <div class=""column""></div>
        <div class=""column""></div>
        <div class=""column""></div>
        <div class=""column""></div>
        <div class=""column""></div>
        <div class=""column""></div>
        <div class=""column""></div>
    </div>

    <div id=""app"" class=""section"">
        <div class=""columns is-multiline"">
                <div v-for=""product in products"" class=""column is-3-desktop is-4-tablet is-6-mobile"" v-if=""(selectedCategory == null || selectedCategory == product.category) && product.realPrice >= priceFrom && product.realPrice <= priceBefore"">
                    <a class=""is-inline-block height100"" v-bind:href=""'/Main/Product/' + product.name"">
                        <div class=""card height100"">
                            <div class=""card-image"">
                                <figure class=""image is-5by3 m-4"">
                                    <img v-bind:src=""'");
            WriteLiteral(@"/Image/' + product.image"" alt=""Placeholder image"">
                                </figure>
                            </div>
                            <div class=""card-content"">
                                <p class=""title is-size-5"">
                                    {{product.name}}
                                </p>
                                <p class=""subtitle is-size-6"">
                                    {{product.shortDescription}}
                                </p>
                                <div class=""notification is-paddingless has-text-centered is-success"">
                                    New
                                </div>
                                <p class=""navbar-end is-size-5"">
                                    {{product.price}}
                                </p>
                            </div>
                        </div>
                    </a>
                </div>
        </div>
    </div>
</div>

");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
      <script>
          var app = new Vue({
              el: '#app',
              data: {
                  loading: false,
                  products: [],
                  categories: [],
                  selectedCategory: null,
                  priceFrom: 5,
                  priceBefore: 305,
              },
              mounted() {
                    this.getProducts();
                    this.getCategories();
              },
              watch: {
                  priceFrom: function() {
                      this.priceBefore = this.priceFrom + 10;
                  },
              },
              methods: {
                  getProducts() {
                      this.loading = true;
                          axios.get(""/Home/GetProducts"")
                            .then(res => {
                                console.log(res);
                                this.products = res.data;
                            })
                            .catch(err =>  ");
                WriteLiteral(@"{
                                console.log(err);
                            })
                            .then(() => {
                                this.loading = false;
                            });
                  },
                  getCategories() {
                      this.loading = true;
                      axios.get(""/Home/GetAllCategories"")
                        .then(res => {
                            console.log(res);
                            this.categories = res.data;
                        })
                        .catch(err => {
                            console.log(err);
                        })
                        .then(() => {
                            this.loading = false;
                        });
                  },
                  selectCategory(category) {
                      this.selectedCategory = category;
                  },
                  reset() {
                      this.selectedCategory = null;
         ");
                WriteLiteral("             this.priceFrom = 5;\r\n                      this.priceBefore = 305;\r\n                  },\r\n              },\r\n          })\r\n      </script>\r\n");
            }
            );
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<MyShop.Pages.Main.MainModel> Html { get; private set; } = default!;
        #nullable disable
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<MyShop.Pages.Main.MainModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<MyShop.Pages.Main.MainModel>)PageContext?.ViewData;
        public MyShop.Pages.Main.MainModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
